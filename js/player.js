"use strict"; function _toConsumableArray(e) { return _arrayWithoutHoles(e) || _iterableToArray(e) || _unsupportedIterableToArray(e) || _nonIterableSpread() } function _nonIterableSpread() { throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } function _unsupportedIterableToArray(e, t) { if (e) { if ("string" == typeof e) return _arrayLikeToArray(e, t); var r = Object.prototype.toString.call(e).slice(8, -1); if ("Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r) return Array.from(e); if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return _arrayLikeToArray(e, t) } } function _iterableToArray(e) { if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e) } function _arrayWithoutHoles(e) { if (Array.isArray(e)) return _arrayLikeToArray(e) } function _arrayLikeToArray(e, t) { (null == t || t > e.length) && (t = e.length); for (var r = 0, a = Array(t); r < t; r++)a[r] = e[r]; return a } document.onreadystatechange = function () { "complete" === document.readyState && function () { var e = document.querySelectorAll(".player"); if (e.length) { var t, r = function e(t) { return Math.PI / 180 * 360 / A * t }, a = function e(t, a) { t = t || r(_), a = a || r(_ + 1), m.clearRect(0, 0, 500, 500), m.beginPath(), m.arc(L / 2, b / 2, L / 2 - 1, 0, a), m.stroke(), m.closePath() }, n = function e() { a(r(_), r(_ + 1)), (_ += 1) === A && (E = 0) }, i = function e(t) { var r = Math.floor(t / 60) - 60 * Math.floor(t / 60 / 60), a = Math.floor(t % 60), n = ""; return 0 != r ? n += r + ":" : n += "0:", 0 === a ? n += "00" : a < 10 ? n += "0" + a : n += a, n }, o = function e(t, r) { var a = t, n = a.querySelector(".audio-element source").getAttribute("src"); switch (r) { case "play": if (a.classList.contains("on-pause") || (p.src = n, p.load()), a.classList.contains("on-pause")) a.classList.add("is-playing"), a.classList.remove("on-pause"), y.classList.add("is-playing"), y.classList.remove("on-pause"), p.play(), s(); else { var i = null; _ = A = E = h = 0, a.classList.add("is-playing"), a.classList.remove("on-pause"), m.clearRect(0, 0, 500, 500), y.classList.add("active"), y.querySelectorAll(".button-inner").forEach(function (e) { e.style.backgroundImage = "url('".concat(a.getAttribute("data-manager-photo-url"), "')") }), y.classList.add("is-playing"), y.classList.remove("on-pause"); var o = setInterval(function () { (i = p.duration) && !isNaN(i) && (p.play(), s(), clearInterval(o)) }, 100) } break; case "pause": a.classList.add("on-pause"), a.classList.remove("is-playing"), y.classList.add("on-pause"), y.classList.remove("is-playing"), p.pause() } }, s = function e() { var t = p.duration; console.log("audio-duration:", t); var r = document.querySelector(".player.is-playing").querySelectorAll(".progress-bar svg rect"), a = Number((t / r.length).toFixed(1)), i = r.length, o = 1, e = 0; A = Math.floor(t), r[0].classList.add("active"), p.addEventListener("timeupdate", function s() { var l = Number(p.currentTime.toFixed(1)); o < r.length - 1 && function e(t, r) { var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .3; return (t - r).toFixed(1) < a && (t - r).toFixed(1) >= 0 }(e + a, l) && (r[o].classList.add("active"), o += 1, e += a), h < A && Math.floor(p.currentTime) === h + 1 && (n(), h += 1), l === Math.floor(t - 2) && r[i - 1].classList.add("active") }) }, l = function t() { var r, a = _toConsumableArray(e); return a.forEach(function (e) { e.classList.contains("is-playing") && (r = a.indexOf(e)) }), r }, c = function e(t) { o(t, "play") }, u = document.querySelectorAll(".play"), d = document.querySelectorAll(".pause"), p = new Audio, y = document.getElementById("player-widget"), f = document.getElementById("widget-play-btn"), v = document.getElementById("widget-pause-btn"), g = 0, m = document.getElementById("progress-circ").getContext("2d"), L = 60, b = 60, h = 0, A = 0, _ = 0, E = 0; m.lineWidth = 2.5, m.strokeStyle = "#00C7D1", e.forEach(function (e) { var t = new Audio, r = e.querySelector(".audio-element source").getAttribute("src"); t.src = r, t.onloadedmetadata = function () { var r = i(t.duration); e.querySelector(".timeout span").innerHTML = r, e.setAttribute("data-current-time", t.currentTime), e.setAttribute("data-duration-time", r) } }), u.forEach(function (e) { e.addEventListener("click", function (e) { e.preventDefault(); var t = this.closest(".player"); $(".player").not(t).removeClass("is-playing on-pause"), $(".player").not(t).find(".progress-bar svg rect").removeClass("active"), y.classList.remove("is-playing", "on-pause"), o(t, "play") }) }), f.addEventListener("click", function (e) { e.preventDefault(), o(t, "play") }), v.addEventListener("click", function (e) { e.preventDefault(), o(t, "pause") }), d.forEach(function (e) { e.addEventListener("click", function (e) { e.preventDefault(); var t = this.closest(".player"); $(".player").not(t).removeClass("is-playing on-pause"), o(t, "pause") }) }), p.addEventListener("timeupdate", function () { var e = i(p.currentTime); t && (t.querySelector(".timeout span").innerHTML = e) }), p.addEventListener("playing", function (r) { t = e[g = l()], e.forEach(function (e) { e.classList.contains("is-playing") || (e.querySelector(".timeout span").innerHTML = e.getAttribute("data-duration-time")) }) }), p.addEventListener("ended", function (r) { var a = 0; g === e.length - 1 ? (a = 0, y.classList.remove("is-playing", "on-pause"), t.classList.remove("is-playing", "on-pouse"), t.querySelectorAll(".progress-bar rect").forEach(function (e) { e.classList.remove("active") })) : c(e[a = g + 1]), t.classList.remove("is-playing", "on-pouse"), t.querySelectorAll(".progress-bar rect").forEach(function (e) { e.classList.remove("active") }) }) } }() };